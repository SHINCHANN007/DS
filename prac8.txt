Q1) PCA and Principal Component Regression (PCR) on iris dataset 

data("iris")  # Load built-in dataset
head(iris)    # View first 6 rows
summary(iris) # Statistical summary
str(iris)     # Check structure

# Perform PCA (scale=TRUE for standardization)
mypr <- prcomp(iris[,-5], scale=TRUE)

# View PCA results
print(mypr)       # Shows rotation matrix
summary(mypr)     # Variance explained

# Scree plot (variance by component)
plot(mypr, type="l", main="Scree Plot")

# Biplot (observations + variables)
biplot(mypr, scale=0, cex=0.7)

# Plot PC scores
plot(mypr$x[,1], mypr$x[,2], 
     col=iris$Species,
     pch=16,
     xlab="PC1", ylab="PC2")
legend("topright", legend=levels(iris$Species),
       col=1:3, pch=16)

# Add first two PCs to original data
iris2 <- cbind(iris, mypr$x[,1:2])
head(iris2)

# Correlation between original vars and PCs
cor(iris[,-5], iris2[,6:7])

library(pls)

# Convert Species to numeric for modeling
iris$Species_num <- as.numeric(iris$Species)

# Fit PCR model (3 components)
pcmodel <- pcr(Sepal.Length ~ Species_num + Sepal.Width + 
                 Petal.Length + Petal.Width,
               ncomp=3, 
               data=iris,
               scale=TRUE,
               validation="CV")

# Model summary
summary(pcmodel)

# Cross-validation plot
validationplot(pcmodel, legendpos="topright")

# Predict using 2 principal components
iris$pred <- predict(pcmodel, ncomp=2, newdata=iris)[,,1]

# View predictions vs actual
head(iris[,c("Sepal.Length","pred")])

# Calculate RMSE
rmse <- sqrt(mean((iris$Sepal.Length - iris$pred)^2))
print(paste("RMSE:", round(rmse,3)))

# Regression coefficients
coef(pcmodel)

# Variance explained
explvar(pcmodel)

# Score plot
plot(pcmodel, plottype="scores", comps=1:2)

----------------------------------------------------------------
Q2) PCA and Principal Component Regression (PCR) on mtcars dataset

# =============================================
# PCA and PCR on mtcars dataset - Clean Version
# =============================================

# 1. LOAD AND INSPECT DATA
data(mtcars)          # Load dataset
head(mtcars)          # Show first 6 rows
summary(mtcars)       # Statistical summary

# 2. PRINCIPAL COMPONENT ANALYSIS (PCA)
mypr_mtcars <- prcomp(mtcars, scale=TRUE)  # PCA with scaling

# 3. VISUALIZE ORIGINAL VS SCALED DATA
plot(mtcars$mpg, mtcars$hp, main = "Original Data")  # Raw data plot
plot(scale(mtcars$mpg), scale(mtcars$hp), main = "Scaled Data")  # Standardized plot

# 4. EXAMINE PCA RESULTS
mypr_mtcars            # Show PCA rotation matrix
summary(mypr_mtcars)   # Variance explained by components
plot(mypr_mtcars, type = "l")  # Scree plot of variances

# 5. PCA BI-PLOT VISUALIZATION
biplot(mypr_mtcars, scale=0)  # Shows variables and observations

# 6. INSPECT PCA STRUCTURE
str(mypr_mtcars)       # View PCA object structure
mypr_mtcars$x          # View principal component scores

# 7. CREATE ENHANCED DATASET WITH PCs
mtcars2 <- cbind(mtcars, mypr_mtcars$x[,1:2])  # Add first 2 PCs
head(mtcars2)          # View augmented dataset

# 8. CHECK CORRELATIONS
cor(mtcars[,-1], mtcars2[, 12:13])  # Correlate original vars with PCs

# 9. PRINCIPAL COMPONENT REGRESSION (PCR)
library(pls)  # Load PLS/PCR package
pcmodel_mtcars <- pcr(mpg~., ncomp=3, data=mtcars, scale=TRUE)  # Fit PCR model

# 10. MAKE PREDICTIONS
mtcars$pred <- predict(pcmodel_mtcars, mtcars, ncomp=2)  # Predict with 2 PCs
head(mtcars)  # View actual vs predicted

----------------------------------------------------------------
Q3) PCA and Principal Component Regression (PCR) on USArrests

# =============================================
# PCA and PCR on USArrests Dataset
# =============================================

# 1. LOAD AND INSPECT DATA
data(USArrests)          # Load dataset
head(USArrests)          # Show first 6 rows
summary(USArrests)       # Statistical summary

# 2. PRINCIPAL COMPONENT ANALYSIS (PCA)
mypr_USArrests <- prcomp(USArrests, scale=TRUE)  # PCA with scaling

# 3. VISUALIZE ORIGINAL VS SCALED DATA
plot(USArrests$Murder, USArrests$Rape, main = "Original Data")  # Raw data plot
plot(scale(USArrests$Murder), scale(USArrests$Rape), main = "Scaled Data")  # Standardized plot

# 4. EXAMINE PCA RESULTS
mypr_USArrests            # Show PCA rotation matrix
summary(mypr_USArrests)   # Variance explained by components
plot(mypr_USArrests, type = "l")  # Scree plot of variances

# 5. PCA BI-PLOT VISUALIZATION
biplot(mypr_USArrests, scale=0)  # Shows variables and states

# 6. INSPECT PCA STRUCTURE
str(mypr_USArrests)       # View PCA object structure
mypr_USArrests$x          # View principal component scores

# 7. CREATE ENHANCED DATASET WITH PCs
USArrests2 <- cbind(USArrests, mypr_USArrests$x[,1:2])  # Add first 2 PCs
head(USArrests2)          # View augmented dataset

# 8. CHECK CORRELATIONS
cor(USArrests, USArrests2[,5:6])  # Correlate original vars with PCs

# 9. PRINCIPAL COMPONENT REGRESSION (PCR)
library(pls)  # Load PLS/PCR package
pcmodel_USArrests <- pcr(Murder~., ncomp=3, data=USArrests, scale=TRUE)  # Fit PCR model

# 10. MAKE PREDICTIONS
USArrests$pred <- predict(pcmodel_USArrests, USArrests, ncomp=2)  # Predict with 2 PCs
head(USArrests)  # View actual vs predicted murder rates

# 11. MODEL EVALUATION (ADDED)
# Calculate prediction error
RMSE <- sqrt(mean((USArrests$Murder - USArrests$pred)^2))
print(paste("RMSE:", round(RMSE, 3)))

# Calculate R-squared
rsq <- cor(USArrests$Murder, USArrests$pred)^2
print(paste("R-squared:", round(rsq, 3)))

----------------------------------------------------------------